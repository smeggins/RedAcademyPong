{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/paddles.js","src/partials/Ball.js","src/partials/score.js","src/partials/Menus.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","up","down","spaceBar","enter","screenSettings","gameWidth","gameHeight","constants","ballSizeRatio","speedRatio","ballSpeedRatioHigh","ballSpeedRatioLow","screenValue","ballSpeed","Variables","ballSize","paddleGap","paddleSpeed","ballSpeedHigh","ballSpeedLow","scoreToWin","svgFunction","svgText","svg","x","y","color","idclass","id","text","word","document","createElementNS","setAttributeNS","innerHTML","appendChild","svgRect","width","height","rect","Board","netWidth","netPosition","netDensity","line","Paddles","boardHeight","paddleX","bottomY","keyUP","keyDown","score","addEventListener","event","key","paused","Math","max","min","paddle","Ball","radius","boardWidth","direction","scorePlayer1","scorePlayer2","serve","ping","Audio","pingSound","prototype","reset","vy","floor","random","vx","abs","ballDirection","ballDirectionStateR","ballDirectionStateL","topDetect","bottomDetect","leftDetect","rightDetect","play","player1","player2","p2BottomY","p1BottomY","p1PaddleX","p2PaddleX","gameState","wallCollision","paddleCollision","circle","Score","winScore","youWon","winState","p1Score","p2Score","winner","scoreP1","scoreP2","winShade","youWin","pressAnyKey","win","PauseMenu","pauseMenuDepth","pauseMenuPosition","optionMenuPosition","pause","menu","pausedM","mainMenuPosition","mainMenuDepth","winpos","pauseShade","Game","element","gameElement","getElementById","gameElementPause","fullscreen","board","paddleWidth","paddleHeight","paddleStartPos","boardGap","ball","scoreWidth","scoreHeight","scoreX","scoreY","scoreBoard","pauseMenu","pauseMenuNav","winUpdator","documentElement","requestFullscreen","dt","isPaused","mainMenuRender","pauseMenuPosReset","paddleReset","render","renderWin","winEvent","removeEventListener","mainMenuOptionsPos","game","gameLoop","timeStamp","requestAnimationFrame"],"mappings":"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","file":"src.bd1eedf9.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nexport const KEYS = {\r\n    a: 'a',\r\n    z: 'z',\r\n    up: 'ArrowUp',\r\n    down: 'ArrowDown',\r\n    spaceBar: 'Space',\r\n    enter: 'Enter',\r\n};\r\n\r\nexport const screenSettings = {\r\n    gameWidth: 512,\r\n    gameHeight: 256,\r\n};\r\n\r\nexport const constants = {\r\n    ballSizeRatio: .031,\r\n    speedRatio: .00008,\r\n    ballSpeedRatioHigh: .012,\r\n    ballSpeedRatioLow: .002,\r\n    screenValue: screenSettings.gameWidth * screenSettings.gameHeight,\r\n    ballSpeed: [.4, .5, .6, .7, .8, .9, 1],\r\n};\r\n\r\nexport const Variables = {\r\n    ballSize: screenSettings.gameHeight * constants.ballSizeRatio,\r\n    paddleGap: 10,\r\n    paddleSpeed: (screenSettings.gameWidth * screenSettings.gameHeight) * constants.speedRatio,\r\n    ballSpeedHigh: screenSettings.gameWidth * constants.ballSpeedRatioHigh, \r\n    ballSpeedLow: screenSettings.gameWidth * constants.ballSpeedRatioLow, \r\n    scoreToWin: 5,\r\n};\r\n\r\nexport const svgFunction = {\r\n\r\n    svgText(svg, x, y, color, idclass, id, text) {\r\n\r\n        let word = document.createElementNS(SVG_NS, \"text\");\r\n        word.setAttributeNS(null, \"x\", x);\r\n        word.setAttributeNS(null, \"y\", y);\r\n        word.setAttributeNS(null, \"fill\", color);\r\n        word.setAttributeNS(null, idclass, id);\r\n        word.innerHTML = text;\r\n        svg.appendChild(word);\r\n        return word;\r\n    },\r\n\r\n    svgRect(svg, x, y, width, height, color) {\r\n\r\n        let rect = document.createElementNS(SVG_NS, \"rect\");\r\n        rect.setAttributeNS(null, \"x\", x);\r\n        rect.setAttributeNS(null, \"y\", y);\r\n        rect.setAttributeNS(null, 'width', width);\r\n        rect.setAttributeNS(null, 'height', height);\r\n        rect.setAttributeNS(null, \"fill\", color);\r\n        svg.appendChild(rect);\r\n        return rect;\r\n    },\r\n};","import { SVG_NS } from \"../settings\"\r\n\r\nexport default class Board {\r\n    constructor (width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.netWidth = width * .01;\r\n        this.netPosition = width / 2 - (this.netWidth/2);\r\n        this.netDensity = height * .06;\r\n    };\r\n\r\n    render(svg) {\r\n        \r\n        let rect = document.createElementNS(SVG_NS, \"rect\");\r\n        rect.setAttributeNS(null, \"width\", this.width);\r\n        rect.setAttributeNS(null, \"height\", this.height); \r\n        rect.setAttributeNS(null, \"stroke\", \"black\");\r\n        rect.setAttributeNS(null, \"stroke-width\", this.netWidth);\r\n        rect.setAttributeNS(null, \"fill\", \"#353535\");\r\n        rect.setAttributeNS(null, \"id\", \"boardBack\");\r\n        svg.appendChild(rect);\r\n\r\n        let line = document.createElementNS(SVG_NS, \"line\");\r\n        line.setAttributeNS(null, \"x1\", this.netPosition);\r\n        line.setAttributeNS(null, \"y1\", \"0\");\r\n        line.setAttributeNS(null, \"x2\", this.netPosition);\r\n        line.setAttributeNS(null, \"y2\", this.height);\r\n        line.setAttributeNS(null, \"stroke\", \"black\");\r\n        line.setAttributeNS(null, \"stroke-width\", this.netWidth);\r\n        line.setAttributeNS(null, \"stroke-dasharray\", this.netDensity);\r\n        svg.appendChild(line);\r\n    };\r\n};\r\n","import { SVG_NS } from \"../settings\"\r\nimport { Variables } from \"../settings\"\r\n\r\nexport default class Paddles {\r\n    constructor (boardHeight, width, height, x, y, up, down) {\r\n        this.boardHeight = boardHeight;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.paddleX = this.x + this.width;\r\n        this.bottomY = this.y + this.height;\r\n        this.keyUP = false;\r\n        this.keyDown = false;\r\n        this.score = 0;\r\n\r\n        let keyDownPressed = (event) => {\r\n\r\n            if (event.key == up) {\r\n                this.keyUP = true;\r\n            }\r\n\r\n            else if (event.key == down) {\r\n                this.keyDown = true;\r\n            };\r\n        };\r\n\r\n        \r\n        let keyUpPressed = (event) => {\r\n\r\n            if (event.key == up) {\r\n                this.keyUP = false;\r\n            }\r\n\r\n            else if (event.key == down) {\r\n                this.keyDown = false;\r\n            };\r\n        };\r\n\r\n        document.addEventListener(\"keydown\", keyDownPressed);\r\n        document.addEventListener(\"keyup\", keyUpPressed);\r\n    };\r\n    \r\n    paddleReset(y) {\r\n        this.y = y;\r\n    };\r\n\r\n    render(svg, paused) {\r\n        this.paused = paused;\r\n\r\n        if (this.paused == 1 && this.keyUP) {\r\n            this.y = Math.max(this.y - Variables.paddleSpeed, 0);\r\n        }\r\n\r\n        else if (this.paused == 1 && this.keyDown) {\r\n            this.y = Math.min(this.y + Variables.paddleSpeed, this.boardHeight - this.height); \r\n        };\r\n        \r\n        let paddle = document.createElementNS(SVG_NS, \"rect\");\r\n        paddle.setAttributeNS(null, 'x', this.x);\r\n        paddle.setAttributeNS(null, 'y', this.y);\r\n        paddle.setAttributeNS(null, 'width', this.width);\r\n        paddle.setAttributeNS(null, 'height', this.height);\r\n        paddle.setAttributeNS(null, 'fill', 'black');\r\n        svg.appendChild(paddle);\r\n    };\r\n};\r\n\r\n","import { SVG_NS } from \"../settings\"\r\nimport { Variables } from \"../settings\"\r\nimport { constants } from \"../settings\"\r\nimport { gameState } from './Game';\r\nimport pingSound from \"../../public/sounds/pong-01.wav\";\r\n\r\nexport default class Ball {\r\n    constructor (radius, boardWidth, boardHeight) {\r\n        this.radius = radius;\r\n        this.boardWidth = boardWidth;\r\n        this.boardHeight = boardHeight;\r\n        this.direction = 1;\r\n        this.scorePlayer1 = 0;\r\n        this.scorePlayer2 = 0;\r\n        this.serve = 0;\r\n        this.ping = new Audio(pingSound);\r\n\r\n\r\n        Ball.prototype.reset = () => {\r\n            this.x = (this.boardWidth / 2) + (this.radius/2);\r\n            this.y = this.boardHeight / 2;\r\n            this.ballSpeedHigh = Variables.ballSpeedHigh;\r\n            this.ballSpeedLow = Variables.ballSpeedLow;\r\n            this.vy = Math.floor(Math.random() * (this.ballSpeedHigh - this.ballSpeedLow) + this.ballSpeedLow);\r\n            this.vx = this.direction * (((this.ballSpeedHigh - Math.abs(this.vy)) + 2) * constants.ballSpeed[3]);\r\n\r\n            gameState.ballDirection = 1;\r\n            this.ballDirectionStateR = '';\r\n            this.ballDirectionStateL = '';\r\n        };\r\n        \r\n        Ball.prototype.reset();\r\n    };\r\n\r\n    get serveCheck() {\r\n        return this.serve;\r\n    };\r\n\r\n    wallCollision() {\r\n        this.topDetect = this.y - (this.radius);\r\n        this.bottomDetect = this.y + (this.radius);\r\n        this.leftDetect = this.x - (this.radius);\r\n        this.rightDetect = this.x + (this.radius);\r\n\r\n        if (this.topDetect <= 0) {\r\n            this.vy *= -1;\r\n            this.ping.play();\r\n        }\r\n\r\n        else if (this.bottomDetect >= this.boardHeight) {\r\n            this.vy *= -1;\r\n            this.ping.play();\r\n        }\r\n\r\n        else if (this.leftDetect <= 0) {\r\n            this.vx *= -1;\r\n            this.scorePlayer1 += 1;\r\n            Ball.prototype.reset();\r\n        }\r\n\r\n        else if (this.rightDetect >= this.boardWidth) {\r\n            this.vx *= -1;\r\n            this.scorePlayer2 += 1;\r\n            Ball.prototype.reset();\r\n        };\r\n    };\r\n\r\n    paddleCollision(player1, player2) {\r\n        this.p2BottomY = player2.y + player2.height;\r\n        this.p1BottomY = player1.y + player1.height;\r\n        this.p1PaddleX = player1.x + player1.width;\r\n        this.p2PaddleX = player2.x + player2.width;\r\n        this.ballDirectionStateR;\r\n        this.ballDirectionStateL;\r\n\r\n        if (this.rightDetect >= player2.x && this.y >= player2.y && this.y <= this.p2BottomY ) {\r\n\r\n            if (gameState.ballDirection != this.ballDirectionStateR) {\r\n                this.vx *= -1;\r\n                this.ping.play();\r\n                gameState.ballDirection *= -1;\r\n                this.ballDirectionStateR = gameState.ballDirection;\r\n            };\r\n        }\r\n\r\n        else if (this.leftDetect <= this.p1PaddleX && this.y >= player1.y && this.y <= this.p1BottomY ) {\r\n\r\n            if (gameState.ballDirection != this.ballDirectionStateL) {\r\n                this.vx *= -1;\r\n                this.ping.play();\r\n                gameState.ballDirection *= -1;\r\n                this.ballDirectionStateL = gameState.ballDirection;\r\n            };\r\n        }\r\n\r\n        else if (this.bottomDetect >= (player1.y || player2.y) && this.bottomDetect <= (this.p1BottomY || this.p2BottomY) && this.x >= (player1.x || this.p2PaddleX) && this.x <= (this.p1PaddleX || player2.x)) {\r\n            this.vx *= -1;\r\n            this.vy *= -1;\r\n            this.ping.play();\r\n        }\r\n\r\n        else if (this.topDetect >= (player1.y || player2.y) && this.topDetect <= (this.p1BottomY || this.p2BottomY) && this.x >= (player1.x || this.p2PaddleX) && this.x <= (this.p1PaddleX || player2.x)) {\r\n            this.vx *= -1;\r\n            this.vy *= -1;\r\n            this.ping.play();\r\n        };\r\n    };\r\n\r\n    render(svg, player1, player2) {\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n        this.wallCollision(player1, player2);\r\n        this.paddleCollision(player1, player2);\r\n\r\n        let circle = document.createElementNS(SVG_NS, \"circle\");\r\n        circle.setAttributeNS(null, \"cx\", this.x);\r\n        circle.setAttributeNS(null, \"cy\", this.y);\r\n        circle.setAttributeNS(null, \"r\", this.radius);\r\n        circle.setAttributeNS(null, \"fill\", \"black\");\r\n        svg.appendChild(circle);\r\n    };\r\n\r\n\r\n};\r\n","import { SVG_NS } from \"../settings\"\r\nimport { Variables } from '../settings';\r\nimport { gameState } from './Game'\r\n\r\nexport default class Score {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.winScore = Variables.scoreToWin;\r\n\r\n        this.youWon = () => {\r\n                gameState.winState = 1;\r\n\r\n                if (this.p1Score > this.p2Score) {\r\n                    this.winner = 'Player 2';\r\n                }\r\n\r\n                else {\r\n                    this.winner = 'Player 1';\r\n                };\r\n            \r\n        };\r\n\r\n    };\r\n    \r\n    get winUpdator() {\r\n        return this.win;\r\n    };\r\n\r\n    render(svg, scoreP1, scoreP2, paused) {\r\n        this.p1Score = scoreP1;\r\n        this.p2Score = scoreP2;\r\n\r\n        if (((this.p1Score >= this.winScore) || (this.p2Score >= this.winScore)) && gameState.winState == 0) {\r\n            this.youWon();\r\n        };\r\n        \r\n        let score = document.createElementNS(SVG_NS, \"rect\");\r\n        score.setAttributeNS(null, 'x', this.x);\r\n        score.setAttributeNS(null, 'y', this.y);\r\n        score.setAttributeNS(null, 'width', this.width);\r\n        score.setAttributeNS(null, 'height', this.height);\r\n        score.setAttributeNS(null, 'fill', 'black');\r\n        score.setAttributeNS(null, \"id\", 'scoreBox');\r\n        score.setAttributeNS(null, 'border', '1px solid black');\r\n        svg.appendChild(score);\r\n\r\n        let text = document.createElementNS(SVG_NS, \"text\");\r\n        text.setAttributeNS(null, \"x\", this.x + 10);\r\n        text.setAttributeNS(null, \"y\", this.y + 15);\r\n        text.setAttributeNS(null, \"fill\", '#11cd2f');\r\n        text.innerHTML = `${this.p1Score}  Score  ${this.p2Score}`;\r\n        svg.appendChild(text);\r\n    };\r\n\r\n    renderWin(svg) {\r\n\r\n        let winShade = document.createElementNS(SVG_NS, \"rect\");\r\n        winShade.setAttributeNS(null, 'width', 512);\r\n        winShade.setAttributeNS(null, 'height', 256);\r\n        winShade.setAttributeNS(null, \"rx\", 10);\r\n        winShade.setAttributeNS(null, \"ry\", 10);\r\n        winShade.setAttributeNS(null, 'fill', 'black');\r\n        winShade.setAttributeNS(null, 'opacity', 0.3);\r\n        svg.appendChild(winShade);\r\n\r\n        let youWin = document.createElementNS(SVG_NS, \"text\");\r\n        youWin.setAttributeNS(null, \"x\", this.x * .68);\r\n        youWin.setAttributeNS(null, \"y\", this.y + 120);\r\n        youWin.setAttributeNS(null, \"fill\", 'red');\r\n        youWin.setAttributeNS(null, \"id\", 'youWin');\r\n        youWin.innerHTML = `${this.winner}  Wins!`;\r\n        svg.appendChild(youWin);\r\n\r\n        let pressAnyKey = document.createElementNS(SVG_NS, \"text\");\r\n        pressAnyKey.setAttributeNS(null, \"x\", this.x * .55);\r\n        pressAnyKey.setAttributeNS(null, \"y\", this.y + 140);\r\n        pressAnyKey.setAttributeNS(null, \"fill\", 'red');\r\n        pressAnyKey.innerHTML = `press enter key to continue`;\r\n        svg.appendChild(pressAnyKey);\r\n    };\r\n  };","import { SVG_NS } from '../settings';\r\nimport Game from './Game';\r\nimport { gameState } from './Game';\r\nimport { menu } from './Game'\r\nimport { svgFunction } from '../settings'\r\n\r\nexport default class PauseMenu  {\r\n    constructor() {\r\n\r\n        this.pauseMenuDepth = 0;\r\n        this.pauseMenuPosition = 4;\r\n        this.optionMenuPosition = 3;\r\n        this.paused = 1;\r\n\r\n        PauseMenu.prototype.pause = () => {\r\n            document.addEventListener(\"keydown\", event => {\r\n              if (event.key == 'p' && this.paused != -1 && gameState.menu == 0) {\r\n                this.paused *= -1;\r\n              };\r\n            });\r\n          };\r\n\r\n    }\r\n\r\n    pauseMenuPosReset() {\r\n        if (this.pausedM == 1) {\r\n            this.pauseMenuPosition = 3;\r\n        };\r\n\r\n    };\r\n\r\n    get pausedM() {\r\n        return this.paused;\r\n    };\r\n\r\n\r\n    pauseMenuNav(up, down, enter) {\r\n        document.addEventListener(\"keydown\", event => {\r\n            switch (event.key) {\r\n                case up:\r\n\r\n                    if (this.pausedM == -1 && gameState.winState == 0 && this.pauseMenuPosition <= 3) {\r\n                        this.pauseMenuPosition += 1;\r\n                    }\r\n                    else if(gameState.menu == 1 && menu.mainMenuPosition <= 1) {\r\n                        menu.mainMenuPosition += 1;\r\n                    };\r\n                    break;\r\n\r\n                case down:\r\n\r\n                    if (this.pausedM == -1 && gameState.winState == 0 && this.pauseMenuPosition >= 2) {\r\n                        this.pauseMenuPosition -= 1;\r\n                    }\r\n                    else if(gameState.menu == 1 && menu.mainMenuPosition >= 2) {\r\n                        menu.mainMenuPosition -= 1;\r\n                    };\r\n                    break;\r\n\r\n                case enter:\r\n\r\n                    if (this.pausedM == -1 && this.pauseMenuDepth == 0 && this.pauseMenuPosition == 3) {\r\n                        this.paused *= -1;\r\n                    }\r\n                    else if (this.pausedM == -1 && gameState.winState == 0 && this.pauseMenuDepth == 0 && this.pauseMenuPosition == 2) {\r\n                        Game.prototype.reset();\r\n                        this.paused *= -1;\r\n                    }\r\n                    else if (this.pausedM == -1 && gameState.winState == 0 && this.pauseMenuDepth == 0 && this.pauseMenuPosition == 1) {\r\n                        gameState.menu = 1;\r\n                        this.paused *= -1;\r\n                        Game.prototype.reset();\r\n                    }        \r\n                    else if (gameState.menu == 1 && menu.mainMenuPosition == 2 && menu.mainMenuDepth == 0) {\r\n                        gameState.menu = 0;\r\n                    }\r\n                    else if (gameState.menu == 1 && menu.mainMenuPosition == 1 && menu.mainMenuDepth == 0) {\r\n                        menu.mainMenuDepth = 1;\r\n                    }\r\n                    else if (gameState.menu == 1 && menu.mainMenuDepth == 1) {\r\n                        menu.mainMenuDepth = 0;\r\n                    };\r\n                    break;\r\n            };\r\n        });\r\n        \r\n    };\r\n\r\n    render(svg, winpos) {\r\n\r\n        if (this.pauseMenuDepth == 0) {\r\n            let pauseShade = document.createElementNS(SVG_NS, \"rect\");\r\n            pauseShade.setAttributeNS(null, 'width', 512);\r\n            pauseShade.setAttributeNS(null, 'height', 256);\r\n            pauseShade.setAttributeNS(null, \"rx\", 10);\r\n            pauseShade.setAttributeNS(null, \"ry\", 10);\r\n            pauseShade.setAttributeNS(null, 'fill', 'black');\r\n            pauseShade.setAttributeNS(null, 'opacity', 0.3);\r\n            svg.appendChild(pauseShade);\r\n\r\n            let pausemenu2 = svgFunction.svgRect(svg, 187, 27, 139, 203, 'yellow');\r\n            let pausemenu = svgFunction.svgRect(svg, 192, 32, 128, 192, 'black');\r\n            \r\n            if (this.pauseMenuPosition == 3) {\r\n                let resumeSelect = svgFunction.svgRect(svg, 195, 32+50, 118, 10, 'grey');\r\n            };\r\n\r\n            let resume = svgFunction.svgText(svg, 195, 32+60, 'red', 'class', 'pauseMenuText', 'Resume');\r\n\r\n            if (this.pauseMenuPosition == 2) {\r\n                let restartSelect = svgFunction.svgRect(svg, 195, 32+70, 118, 10, 'grey');\r\n            };\r\n\r\n            let restart = svgFunction.svgText(svg, 195, 32 + 80, 'red', 'class', 'pauseMenuText', 'Restart');\r\n\r\n            if (this.pauseMenuPosition == 1) {\r\n                let exitSelect = svgFunction.svgRect(svg, 195, 32+90, 118, 10, 'grey');\r\n            };\r\n\r\n            let exit = svgFunction.svgText(svg, 195, 32 + 100, 'red', 'class', 'pauseMenuText', 'Exit');\r\n\r\n        };\r\n    };\r\n\r\n    mainMenuRender(svg, width, height) {\r\n\r\n        if(menu.mainMenuDepth == 0) {\r\n            let pongMenuText = svgFunction.svgText(svg, width / 2 * .55, height * .4, '#11cd2f', 'id', 'pongMenuText', 'Pong');\r\n            let vsMenuText = svgFunction.svgText(svg, width / 2 * .85, height *.6, '#11cd2f', 'class', 'vsMenuText', 'play');\r\n            let vsMenuText2 = svgFunction.svgText(svg, width / 2 * .74, height *.75, '#11cd2f', 'class', 'vsMenuText', 'controls');\r\n\r\n            if(menu.mainMenuPosition == 2) {\r\n                let paddleSelectorL = svgFunction.svgRect(svg, width *.395, height *.535, 5, 20, 'black');\r\n                let paddleSelectorR = svgFunction.svgRect(svg, width *.58, height *.535, 5, 20, 'black');\r\n            }\r\n\r\n            else if(menu.mainMenuPosition == 1) {\r\n                let mmControlsSelectorL = svgFunction.svgRect(svg, width *.35, height *.68, 5, 20, 'black');\r\n                let mmControlsSelectorR = svgFunction.svgRect(svg, width *.655, height *.68, 5, 20, 'black');\r\n            };\r\n        }\r\n\r\n        else if(menu.mainMenuDepth == 1) {\r\n            let ENTER = svgFunction.svgText(svg, 80, 31, '#11cd2f', 'class', 'vsMenuText2', '[ENTER] = Make a selection');\r\n            let p = svgFunction.svgText(svg, 75, 53, '#11cd2f', 'class', 'vsMenuText2', '[p] = Opens the pause menu');\r\n            let a = svgFunction.svgText(svg, 74, 75, '#11cd2f', 'class', 'vsMenuText2', '[a] = moves the L paddle UP');\r\n            let z = svgFunction.svgText(svg, 58, 97, '#11cd2f', 'class', 'vsMenuText2', '[z] = moves the L paddle DOWN');\r\n            let arrowup = svgFunction.svgText(svg, 25, 119, '#11cd2f', 'class', 'vsMenuText2', '[ARROW UP] = moves the R paddle UP');\r\n            let arrowdown = svgFunction.svgText(svg, 0, 141, '#11cd2f', 'class', 'vsMenuText2', '[ARROW DOWN] = moves the R paddle DOWN');\r\n            let f = svgFunction.svgText(svg, 52, 163, '#11cd2f', 'class', 'vsMenuText2', '[f] = makes game go fullscreen');\r\n            let esc = svgFunction.svgText(svg, 90, 185, '#11cd2f', 'class', 'vsMenuText2', '[ESC] = exits fullscreen');\r\n            let mmReturn = svgFunction.svgText(svg, 195, 220, '#11cd2f', 'class', 'vsMenuText', 'Return');\r\n            let paddleSelectorL = svgFunction.svgRect(svg, 185, 205, 5, 20, 'black');\r\n            let paddleSelectorR = svgFunction.svgRect(svg, 307, 205, 5, 20, 'black');\r\n\r\n\r\n        };\r\n    };\r\n};","import { SVG_NS } from '../settings';\r\nimport Board from './Board';\r\nimport Paddles from './paddles';\r\nimport { KEYS } from '../settings';\r\nimport Ball from './Ball';\r\nimport { Variables } from '../settings';\r\nimport Score from './score';\r\nimport PauseMenu from './Menus';\r\n\r\nexport default class Game {\r\n  \tconstructor(element, width, height) {\r\n\t\tthis.element = element;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.gameElement = document.getElementById('game');\r\n\t\tthis.gameElementPause = document.getElementById('pause');\r\n\t\tthis.fullscreen();\r\n\r\n\t\tthis.board = new Board (this.width, this.height);\r\n\r\n\t\tthis.paddleWidth = this.width * .016;\r\n\t\tthis.paddleHeight = this.height * .22;\r\n\t\tthis.paddleStartPos = (this.height - this.paddleHeight) / 2;\r\n\t\tthis.boardGap = Variables.paddleGap;\r\n\t\tthis.up = KEYS.up;\r\n\t\tthis.down = KEYS.down;\r\n\t\tthis.a = KEYS.a;\r\n\t\tthis.z = KEYS.z;\r\n\t\tthis.enter = KEYS.enter;\r\n\r\n\t\tthis.player1 = new Paddles (\r\n\t\tthis.height, \r\n\t\tthis.paddleWidth, \r\n\t\tthis.paddleHeight, \r\n\t\tthis.boardGap, \r\n\t\tthis.paddleStartPos,\r\n\t\tthis.a,\r\n\t\tthis.z,\r\n    \t);\r\n\r\n\t\tthis.player2 = new Paddles (\r\n\t\tthis.height, \r\n\t\tthis.paddleWidth, \r\n\t\tthis.paddleHeight, \r\n\t\t((this.width - this.boardGap) - this.paddleWidth), \r\n\t\tthis.paddleStartPos,\r\n\t\tthis.up,\r\n\t\tthis.down,\r\n\t\t);\r\n\r\n\t\tthis.radius = Variables.ballSize;\r\n\t\tthis.ball = new Ball (this.radius, this.width, this.height);\r\n\r\n\t\tthis.scoreWidth = 113;\r\n\t\tthis.scoreHeight = 20;\r\n\t\tthis.scoreX = (this.width / 2) - (this.scoreWidth / 2);\r\n\t\tthis.scoreY = this.boardGap;\r\n\t\tthis.scoreBoard = new Score (this.scoreX, this.scoreY, this.scoreWidth, this.scoreHeight);\r\n\r\n\r\n\t\tthis.pauseMenu = new PauseMenu ();\r\n\t\tPauseMenu.prototype.pause();\r\n\t\tthis.pauseMenu.pauseMenuNav(this.up, this.down, this.enter, this.scoreBoard.winUpdator);\r\n\r\n\t\tGame.prototype.reset = () => {\r\n\t\tBall.prototype.reset();\r\n\t\tthis.ball.scorePlayer2 = 0;\r\n\t\tthis.ball.scorePlayer1 = 0;\r\n\t\t};\r\n\t\t\r\n    \tGame.prototype.reset()\r\n    \r\n\t}\r\n\r\n\r\n\r\n\r\n\tfullscreen() {\r\n        document.addEventListener(\"keydown\", event => {\r\n\r\n            if (event.key == 'f') {\r\n                document.documentElement.requestFullscreen();\r\n            };\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render(dt) {\r\n        this.isPaused = this.pauseMenu.pausedM;\r\n\r\n        if (gameState.menu == 1) {\r\n            this.gameElement.innerHTML = '';\r\n            this.gameElementPause.innerHTML = '';\r\n            let svg = document.createElementNS(SVG_NS, \"svg\");\r\n            svg.setAttributeNS(null, \"width\", this.width);\r\n            svg.setAttributeNS(null, \"height\", this.height);\r\n            svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\r\n            this.gameElement.appendChild(svg);\r\n            this.pauseMenu.mainMenuRender(svg, this.width, this.height);\r\n            this.pauseMenu.pauseMenuPosReset();\r\n            this.player1.paddleReset(this.paddleStartPos);\r\n            this.player2.paddleReset(this.paddleStartPos);\r\n        }\r\n\r\n        else if (this.isPaused == 1){\r\n            this.gameElement.innerHTML = '';\r\n            this.gameElementPause.innerHTML = '';\r\n            let svg = document.createElementNS(SVG_NS, \"svg\");\r\n            svg.setAttributeNS(null, \"width\", this.width);\r\n            svg.setAttributeNS(null, \"height\", this.height);\r\n            svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\r\n            this.gameElement.appendChild(svg);\r\n            this.board.render(svg);\r\n            this.player1.render(svg, this.pauseMenu.pausedM);\r\n            this.player2.render(svg, this.pauseMenu.pausedM);\r\n            this.scoreBoard.render(svg, this.ball.scorePlayer1, this.ball.scorePlayer2, this.pauseMenu.paused);\r\n            this.ball.render(svg, this.player1, this.player2,);\r\n            this.pauseMenu.pauseMenuPosReset()\r\n\r\n            if (gameState.winState == 1) {\r\n                this.pauseMenu.paused *= -1;\r\n            };\r\n        }  \r\n  \r\n        else if (this.isPaused == -1) {\r\n            this.gameElementPause.innerHTML = '';\r\n            let svg = document.createElementNS(SVG_NS, \"svg\");\r\n            svg.setAttributeNS(null, \"width\", this.width);\r\n            svg.setAttributeNS(null, \"height\", this.height);\r\n            svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\r\n            this.gameElementPause.appendChild(svg);\r\n            \r\n            if (gameState.winState == 0) {\r\n                this.pauseMenu.render(svg, this.scoreBoard.winUpdator);\r\n            }\r\n\r\n            else if (gameState.winState == 1) {\r\n\r\n                this.scoreBoard.renderWin(svg);\r\n                this.player1.paddleReset(this.paddleStartPos);\r\n                this.player2.paddleReset(this.paddleStartPos);\r\n\r\n                const winEvent = () => {\r\n\r\n                    if (event.key == \"Enter\"){\r\n                        gameState.winState = 0;\r\n                        this.ball.scorePlayer1 = 0;\r\n                        this.ball.scorePlayer2 = 0;\r\n                    };\r\n\r\n                document.removeEventListener(\"keydown\", winEvent);\r\n                };\r\n\r\n                document.addEventListener(\"keydown\", winEvent);\r\n                };\r\n         };\r\n\r\n    };\r\n};\r\n\r\nexport const gameState = {\r\n    winState: 0,\r\n    menu: 1,\r\n    ballDirection: 1,\r\n};\r\n\r\nexport const menu = {\r\n    pauseMenuPosition: 0,\r\n    pauseMenuDepth: 0,\r\n    mainMenuPosition: 2,\r\n    mainMenuOptionsPos: 5,\r\n    mainMenuDepth: 0,\r\n};","// import './styles/game.css';\r\nimport Game from './partials/Game';\r\nimport { screenSettings } from './settings'\r\n\r\nconst gameWidth = screenSettings.gameWidth;\r\nconst gameHeight = screenSettings.gameHeight;\r\n\r\nconst game = new Game('game', gameWidth, gameHeight);\r\n\r\n\r\n(function gameLoop(timeStamp) {\r\n  game.render();\r\n  requestAnimationFrame(gameLoop);\r\n})();\r\n"]}